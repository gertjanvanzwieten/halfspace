#! /usr/bin/env python

print 'generating data'

import halfspace, numpy

#los = 0.3815, 0.0843, 0.9205 # unit vector
los = 0, 0, 1 # unit vector
wavelength = .056 # meter
extent = -25e3, 25e3, -25e3, 25e3 # meter (xmin,xmax,ymin,ymax)

sources = [
  halfspace.MogiSource( xyz=[0,0,-1e4] ),
  halfspace.MogiSource( xyz=[10e3,0,-1e4] ),
  halfspace.MogiSource( xyz=[-5e3,-5e3,-1e4] ),
]

measpoints = numpy.random.uniform( low=-25e3, high=25e3, size=[10,2] )
measpointsz = numpy.concatenate( [ measpoints, numpy.zeros((len(measpoints),1)) ], axis=1 )

A = numpy.array([ numpy.dot( source.displacement( measpointsz, poisson=.25 ), los ) for source in sources ]).T

realx = numpy.array( [ 1, 2, 1.5 ] ) * 1e8
realb = numpy.dot( A, realx )

print realb

measb = realb + 1e-2 * numpy.random.normal( size=realb.size )


fitx = numpy.linalg.solve( numpy.dot( A.T, A ), numpy.dot( A.T, measb ) )

print( 'real:', realx )
print( 'fitted:', fitx )






Y, X = numpy.meshgrid(
  numpy.linspace( extent[2], extent[3], 500 ),
  numpy.linspace( extent[0], extent[1], 500 ) )
                       
XYZ = numpy.array([ X, Y, numpy.zeros_like(X) ]).T

disp = sum(sources).displacement( XYZ, poisson=.25 )
disp_los = numpy.dot( disp, los )

print 'plotting'

from matplotlib import pylab

pylab.imshow( disp_los, extent=extent, cmap=pylab.cm.jet, origin='lower' )
pylab.colorbar()

formatter = pylab.FuncFormatter( lambda x, pos: '%dkm' % int( x / 1e3 ) if x else '0' )
ax = pylab.gca()
ax.xaxis.set_major_formatter( formatter )
ax.yaxis.set_major_formatter( formatter )

pylab.axis( extent )
pylab.grid()

print 'done'

pylab.show()
