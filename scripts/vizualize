#! /usr/bin/env python

print 'generating data'

import halfspace, numpy

los = 0.3815, 0.0843, 0.9205 # unit vector
wavelength = .056 # meter
extent = -25e3, 25e3, -25e3, 25e3 # meter (xmin,xmax,ymin,ymax)

fault = halfspace.OkadaSource(
  strike=30, dip=60, rake=0, # degree
  slip=1.5, # meter
  ztop=-1.5e3, zbottom=-7e3, length=16e3, # meter
  xtrace=0, ytrace=0 ) # meter

Y, X = numpy.meshgrid(
  numpy.linspace( extent[2], extent[3], 500 ),
  numpy.linspace( extent[0], extent[1], 500 ) )
                       
XYZ = numpy.array([ X, Y, numpy.zeros_like(X) ]).T

disp = fault.displacement( XYZ, poisson=.25 )
disp_los = numpy.dot( disp, los )
phase = ( numpy.mod( disp_los / ( .5 * wavelength ) * 2 + 1, 2 ) - 1 ) * numpy.pi

print 'plotting'

from matplotlib import pylab

pylab.imshow( phase, extent=extent, cmap=pylab.cm.jet, origin='lower' )
pylab.clim( [ -numpy.pi, numpy.pi ] )

dx = numpy.array((-.5,.5)) * fault.length * numpy.sin( fault.strike * numpy.pi / 180 )
dy = numpy.array((-.5,.5)) * fault.length * numpy.cos( fault.strike * numpy.pi / 180 )
pylab.plot( fault.xtrace + dx, fault.ytrace + dy, 'w-', linewidth=5, solid_capstyle='round' )
pylab.plot( fault.xtrace + dx, fault.ytrace + dy, 'k--', linewidth=2, dash_capstyle='round' )

formatter = pylab.FuncFormatter( lambda x, pos: '%dkm' % int( x / 1e3 ) if x else '0' )
ax = pylab.gca()
ax.xaxis.set_major_formatter( formatter )
ax.yaxis.set_major_formatter( formatter )

pylab.axis( extent )
pylab.grid()

print 'done'

pylab.show()
